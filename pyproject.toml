[project]
# PEP 621 project metadata
# See https://www.python.org/dev/peps/pep-0621/
authors = [
    {name = "Eric Smith", email = "eric@esmithy.net"},
]
license = {text = "MIT"}
requires-python = ">=3.11,<4.0"
dependencies = [
    "starlette>=0.14.1",
    "uvicorn>=0.12.2",
    "gunicorn>=20.0.4",
    "sse-starlette>=0.6.1",
    "aiofiles>=0.6.0",
    "sqlitedict>=1.7.0",
    "cryptography<4.0",
    "httpx>=0.23.0",
    "aiogoogle>=2.1.0",
    "google-auth-oauthlib>=0.4.2",
    "personalcapital>=1.0.1",
    "IMAPClient>=2.2.0",
    "Authlib>=0.15.5",
    "aiohttp>=3.8.1",
    "defusedxml>=0.7.1",
    "jinja2>=3.1.2",
    "prompt-toolkit>=3.0.47",
    "textual>=0.71.0",
]
name = ""  # PDM uses a blank name to indicate an application instead of a library.
version = "4.0.0"
description = "A life dashboard application for Raspberry Pi"

[tool.pdm.scripts]

[tool.pdm.scripts.mirror]
cmd = "uvicorn --port 5000 --app-dir src --log-config conf/uvicorn.logger.json mirror.main:app"
help = "Run the mirror web server"

[tool.pdm.scripts.config]
shell = "cd src && python -m mirror.main_config"
help = "Configure the mirror"

[tool.black]
exclude = '''
(
  /(  # Exclude directories:
      \.eggs
    | .+\.egg-info
    | \.git
    | \.mypy_cache
    | \.pytest_cache
    | \.venv
    | _build
    | build
  )/
)
'''

[tool.pdm]
[tool.pdm.dev-dependencies]
dev = [
    "black",
    "mypy",
    "pre-commit",
    "pytest",
    "pytest-asyncio<1.0.0,>=0.14.0",
    "ruff>=0.0.287",
    "textual-dev>=1.5.1",
]

[tool.pdm.build]
includes = ["src/"]
package-dir = "src/"

[tool.pytest.ini_options]
addopts = [
    "--durations=10",
    "--import-mode=importlib",
]
testpaths = ["tests"]
xfail_strict = true
pythonpath = "src"
asyncio_mode = "auto"

[tool.ruff]
select = ["ALL"]
ignore = [
    "ANN101",   # Missing type annotation for `self` in method
    "ANN002",   # Missing type annotation for `*args`
    "ANN003",   # Missing type annotation for `**kwargs`
    "D107",     # Missing docstring in `__init__`
    "D102",     # Missing docstring in public method
    "D103",     # Missing docstring in public function
    "D104",     # Missing docstring in public package
    "D105",     # Missing docstring in magic method
    "D203",     # 1 blank line required before class docstring
    "D213",     # Multi-line docstring summary should start at the second line
    "FIX002",   # Line contains TODO, consider resolving the issue
    "PGH003",   # Use specific rule codes when ignoring type issues
    "RET504",   # Unnecessary variable assignment before `return` statement
    "S105",     # Possible hardcoded password
    "S106",     # Possible hardcoded password
    "T201",     # `print` found
    "TD002",    # Missing author in TODO; try: `# TODO(<author_name>): ...` or `# TODO @<author_name>: ...`
    "TD003",    # Missing issue link on the line following this TODO
    "TRY300",   # Consider moving this statement to an `else` block
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "S101"]
